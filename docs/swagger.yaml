basePath: /api
definitions:
  entities.Admin:
    properties:
      email:
        type: string
      fullname:
        type: string
      password:
        type: string
    type: object
  entities.User:
    properties:
      birthday:
        type: string
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
      sensitive_skin:
        type: boolean
    type: object
  presentation.Responses:
    properties:
      data: {}
      error: {}
      status:
        type: boolean
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server for Project S.
  title: Project S API
  version: "1.0"
paths:
  /acne:
    get:
      consumes:
      - application/json
      description: Get acnes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Get acnes
      tags:
      - acne
  /acne/{id}:
    get:
      consumes:
      - application/json
      description: Get acne
      parameters:
      - description: Acne ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Get acne
      tags:
      - acne
  /admin/acne/:
    post:
      consumes:
      - application/json
      description: Create an acne
      parameters:
      - in: formData
        name: name
        type: string
      - description: Acne Image
        in: formData
        name: file
        required: true
        type: file
      - description: Token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Create an acne
      tags:
      - acne
  /admin/acne/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an acne by ID
      parameters:
      - description: Acne ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Delete an acne by ID
      tags:
      - acne
    put:
      consumes:
      - application/json
      description: Update an acne by ID
      parameters:
      - description: Acne ID
        in: path
        name: id
        required: true
        type: integer
      - in: formData
        name: name
        type: string
      - description: Acne Image
        in: formData
        name: file
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Update an acne by ID
      tags:
      - acne
  /admin/facial:
    post:
      consumes:
      - application/json
      description: Create facial
      parameters:
      - description: Facial image
        in: formData
        name: file
        required: true
        type: file
      - in: formData
        name: name
        type: string
      - description: Token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Create facial
      tags:
      - facial
  /admin/facial/{id}:
    delete:
      consumes:
      - application/json
      description: Delete facial by ID
      parameters:
      - description: Facial ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: Delete facial by ID
      tags:
      - facial
    put:
      consumes:
      - application/json
      description: Update facial by ID
      parameters:
      - description: Facial ID
        in: path
        name: id
        required: true
        type: integer
      - in: formData
        name: name
        type: string
      - description: Facial image
        in: formData
        name: file
        type: file
      produces:
      - application/json
      responses: {}
      summary: Update facial by ID
      tags:
      - facial
  /admin/login:
    post:
      consumes:
      - application/json
      description: Log in
      parameters:
      - description: Admin Object
        in: body
        name: admin
        required: true
        schema:
          properties:
            email:
              type: string
            password:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Log in
      tags:
      - admin
  /admin/manage:
    get:
      consumes:
      - application/json
      description: Get admins
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Get admins
      tags:
      - admin
    post:
      consumes:
      - application/json
      description: Create an admin
      parameters:
      - in: formData
        name: email
        type: string
      - in: formData
        name: fullname
        type: string
      - in: formData
        name: password
        type: string
      - description: Admin Image
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Create an admin
      tags:
      - admin
  /admin/manage/:
    put:
      consumes:
      - application/json
      description: Update an admin by ID
      parameters:
      - in: formData
        name: email
        type: string
      - in: formData
        name: fullname
        type: string
      - in: formData
        name: password
        type: string
      - description: Admin Image
        in: formData
        name: file
        type: file
      - description: Admin Token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Update an admin by ID
      tags:
      - admin
  /admin/manage/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an admin by ID
      parameters:
      - description: Admin ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Delete an admin by ID
      tags:
      - admin
    get:
      consumes:
      - application/json
      description: Get an admin by ID
      parameters:
      - description: Admin ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Get an admin by ID
      tags:
      - admin
  /admin/profile:
    get:
      consumes:
      - application/json
      description: Get an admin by token
      parameters:
      - description: Admin Token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Get an admin by token
      tags:
      - admin
  /admin/skin:
    post:
      consumes:
      - application/json
      description: Create an skin
      parameters:
      - in: formData
        name: name
        type: string
      - description: Skin Image
        in: formData
        name: file
        required: true
        type: file
      - description: Token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Create an skin
      tags:
      - skin
  /admin/skin/{id}:
    delete:
      consumes:
      - application/json
      description: Delete skin
      parameters:
      - description: Skin ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Delete skin
      tags:
      - skin
    put:
      consumes:
      - application/json
      description: Update skin
      parameters:
      - description: Skin ID
        in: path
        name: id
        required: true
        type: string
      - in: formData
        name: name
        type: string
      - description: Skin Image
        in: formData
        name: file
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Update skin
      tags:
      - skin
  /admin/skincare:
    post:
      consumes:
      - application/json
      description: Create a skincare
      parameters:
      - in: formData
        name: description
        type: string
      - in: formData
        name: name
        type: string
      - description: Skincare Image
        in: formData
        name: file
        required: true
        type: file
      - description: Token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Create a skincare
      tags:
      - skincare
  /admin/skincare/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a skincare
      parameters:
      - description: Skincare ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Delete a skincare
      tags:
      - skincare
    put:
      consumes:
      - application/json
      description: Update a skincare
      parameters:
      - description: Skincare ID
        in: path
        name: id
        required: true
        type: integer
      - in: formData
        name: description
        type: string
      - in: formData
        name: name
        type: string
      - description: Skincare Image
        in: formData
        name: file
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Update a skincare
      tags:
      - skincare
  /bookmark/{id}:
    post:
      consumes:
      - application/json
      description: Bookmark a thread
      parameters:
      - description: Thread ID
        in: path
        name: id
        required: true
        type: integer
      - description: Token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Bookmark a thread
      tags:
      - bookmark
  /comment:
    post:
      consumes:
      - application/json
      description: Create a comment
      parameters:
      - description: Token
        in: header
        name: token
        required: true
        type: string
      - description: Comment
        in: body
        name: comment
        required: true
        schema:
          properties:
            text:
              type: string
            thread_id:
              type: integer
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Create a comment
      tags:
      - comment
  /comment/{thread_id}:
    get:
      consumes:
      - application/json
      description: Get a comment
      parameters:
      - description: Thread ID
        in: path
        name: thread_id
        required: true
        type: integer
      - description: Token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Get a comment
      tags:
      - comment
  /facial:
    get:
      consumes:
      - application/json
      description: Get all facials
      produces:
      - application/json
      responses: {}
      summary: Get all facials
      tags:
      - facial
  /facial/{id}:
    get:
      consumes:
      - application/json
      description: Get facial by ID
      parameters:
      - description: Facial ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: Get facial by ID
      tags:
      - facial
  /results/:
    get:
      consumes:
      - application/json
      description: Get results
      parameters:
      - description: Token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Get results
      tags:
      - results
    post:
      consumes:
      - application/json
      description: Create a result
      parameters:
      - description: File
        in: formData
        name: file
        required: true
        type: file
      - description: Token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Create a result
      tags:
      - results
  /results/{id}:
    get:
      consumes:
      - application/json
      description: Get a result
      parameters:
      - description: Result ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Get a result
      tags:
      - results
  /results/compare:
    post:
      consumes:
      - application/json
      description: Get results by IDs
      parameters:
      - description: Token
        in: header
        name: token
        required: true
        type: string
      - description: IDs
        in: body
        name: ids
        required: true
        schema:
          properties:
            IDs:
              items:
                type: integer
              type: array
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Get results by IDs
      tags:
      - results
  /results/latest:
    get:
      consumes:
      - application/json
      description: Get the latest result
      parameters:
      - description: Token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Get the latest result
      tags:
      - results
  /skin:
    get:
      consumes:
      - application/json
      description: Get skins
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Get skins
      tags:
      - skin
  /skin/{id}:
    get:
      consumes:
      - application/json
      description: Get skin
      parameters:
      - description: Skin ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Get skin
      tags:
      - skin
  /skincare:
    get:
      consumes:
      - application/json
      description: Get skincares
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Get skincares
      tags:
      - skincare
  /skincare/{id}:
    get:
      consumes:
      - application/json
      description: Get a skincare
      parameters:
      - description: Skincare ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Get a skincare
      tags:
      - skincare
  /thread/:
    get:
      consumes:
      - application/json
      description: Get threads
      parameters:
      - description: Token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Get threads
      tags:
      - threads
    post:
      consumes:
      - multipart/form-data
      description: Create a thread
      parameters:
      - description: Token
        in: header
        name: token
        required: true
        type: string
      - description: Title
        in: formData
        name: title
        type: string
      - description: Caption
        in: formData
        name: caption
        type: string
      - description: File
        in: formData
        name: files
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Create a thread
      tags:
      - threads
  /thread/{id}:
    get:
      consumes:
      - application/json
      description: Get a thread
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: Token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Get a thread
      tags:
      - threads
  /user/:
    put:
      consumes:
      - application/json
      description: Update user
      parameters:
      - description: Token
        in: header
        name: token
        required: true
        type: string
      - description: User information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entities.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Update user
      tags:
      - user
  /user/goolge-signin:
    post:
      consumes:
      - application/json
      description: Google sign in
      parameters:
      - description: Admin Object
        in: body
        name: admin
        required: true
        schema:
          properties:
            email:
              type: string
            fullname:
              type: string
            image:
              type: string
            sensitive_skin:
              type: boolean
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Google sign in
      tags:
      - user
  /user/login:
    post:
      consumes:
      - application/json
      description: Log in
      parameters:
      - description: Admin Object
        in: body
        name: admin
        required: true
        schema:
          properties:
            email:
              type: string
            password:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Log in
      tags:
      - user
  /user/me:
    get:
      consumes:
      - application/json
      description: Get user by id
      parameters:
      - description: Token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Get user by id
      tags:
      - user
  /user/register:
    post:
      consumes:
      - application/json
      description: Register new user
      parameters:
      - description: User information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entities.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/presentation.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/presentation.Responses'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/presentation.Responses'
      summary: Register new user
      tags:
      - user
swagger: "2.0"
